@use "./reset.scss";
@use "./mixins";
@use "./theme";

@font-face {
    font-family: "typewriter";
    src: url(../assets/fonts/typewriter.ttf);
}

body, .container {
    @include mixins.size(100vw, 100vh, true);
    @include mixins.color(null, theme.$body-bg-color);
    @include mixins.font(calc(10px + 0.7vw), 500, "typewriter");
    @include mixins.flex(column, stretch);
}

a {
    @include mixins.color(theme.$link-color);
    text-decoration: none;

    &:visited {
        @include mixins.color(theme.$link-visited-color);
    }

    &:hover {
        @include mixins.color(theme.$link-hover-color);
    }

    &:active {
        @include mixins.color(theme.$link-active-color);
    }
    
}

svg {
    pointer-events: none;
}

button {
    border: none;
    outline: none;
}

.button {
    @include mixins.size(120px, 30px);
    @include mixins.color(theme.$player-label-color, theme.$player-input-color);

    &:hover {
        @include mixins.color(theme.$player-input-color, theme.$player-label-color);
    }
}

footer {
    flex: 0 0 5vh;
    @include mixins.flex(row, center, center);
    @include mixins.position(relative);

    .wave {
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        overflow: hidden;
        line-height: 0;
        transform: rotate(180deg);
    }
    
    .wave svg {
        position: relative;
        display: block;
        width: calc(179% + 1.3px);
        height: 130px;
        transform: rotateY(180deg);
    }
    
    .wave .shape-fill {
        fill: theme.$footer-bg-color;
    }

    .github-div {
        z-index: 100;
    }
    
    .github-div > a {
        @include mixins.flex(row, center, space-between);
        @include mixins.font(calc(10px + 0.5vw));
        @include mixins.size(40%, null, true);
    
        * {
            @include mixins.box-control(null, 2px)
        }
    }
}

.invisible {
    display: none !important;
}

.error-div {
    @include mixins.color(theme.$error-color);
    margin-top: 10px;
}

.unclickable {
    pointer-events: none;
}

.initial-header {
    flex: 0 0 10vh;
    @include mixins.flex(row, center, center);
}

.initial-main {
    flex: 1 1 85vh;
    @include mixins.flex(column, stretch, center);
}


.volume-div {
    @include mixins.flex(row, center, center);
}

.player-form {
    flex: 1 1 50%;
    @include mixins.flex(column, center, space-evenly);
    @include mixins.position(relative);
    z-index: 100;

    .pirate-inner-border {
        @include mixins.flex(row, center, center);
        @include mixins.color(theme.$pirate-inner-color, theme.$pirate-inner-bg);
        @include mixins.box-control(null, 10px, null, 10%);
    
        flex-wrap: wrap;
    
        .pirate-text {
            @include mixins.font(calc(8px + 1vw), 500, "typewriter")
        }
    }
    
    .pirate-outer-border {
        @include mixins.color(null, theme.$pirate-outer-bg);
        @include mixins.box-control(5px, 10px, null, 10%);
    }

    .blob {
        @include mixins.position(absolute, T, 0, L, 0);
        z-index: -100;
    }
}

form {

    .player-section {
        @include mixins.flex(row, center, space-around);
        @include mixins.box-control(null, 10px);
        @include mixins.size(100%, 25%, true);
        flex-wrap: wrap;
        align-content: space-between
    }

    .player-part {
        @include mixins.flex(column, flex-start, space-around);
    }

    .player-elements {
        @include mixins.label-as-placeholder;

        label {
            @include mixins.color(theme.$player-label-color);
            
        }

        input {
            @include mixins.color(theme.$player-label-color, theme.$player-input-color);
            @include mixins.box-control(null, 10px);

            border: none;
            outline: none;
        }
    }

    .AI-elements {
        margin-top: 5px;
        @include mixins.flex(row, center);
        @include mixins.custom-checkbox(
            15px, 
            15px, 
            theme.$checked-color,
            null, 
            null, 
            null,
            theme.$player-input-color, 
            );
    }

}

.game-header {
    @include mixins.box-control(null, 10px);
    @include mixins.flex(row, center, space-around);
    flex: 0 0 10vh;

    >h1 {
        @include mixins.font(calc(10px + 2vw), 500, "typewriter");
    }
}

.board-header {
    text-align: center;
}

.pirate-inner-border {
    @include mixins.flex(row, center, center);
    @include mixins.color(theme.$pirate-inner-color, theme.$pirate-inner-bg);
    @include mixins.box-control(null, 5px, null, 10%);

    flex-wrap: wrap;

    .pirate-text {
        @include mixins.font(calc(8px + 0.5vw), 500, "typewriter")
    }
}

.pirate-outer-border {
    @include mixins.color(null, theme.$pirate-outer-bg);
    @include mixins.box-control(0px, 5px, null, 10%);
    @include mixins.size(calc(10px + 50%), null, false);
}

.game-main {
    @include mixins.flex(column, center, space-around);
    flex: 1 1 85vh;
}

.button-section {
    @include mixins.position(relative);
    z-index: 100;
}

.gameOver-main {
    @include mixins.flex(column, center, space-around);
    flex: 1 1 85vh;

}

.board-container {
    @include mixins.flex(row, null, space-around);
    @include mixins.size(100%, null);
    flex-wrap: wrap;

    .board-section {
        @include mixins.box-control(null, 20px);
    }
}

.gameboard {
    $cell-size: calc(1rem + 1.5vw);
    @include mixins.grid(repeat(11, $cell-size), repeat(11, $cell-size));
    grid-auto-flow: column;

    .hit-ship {
        @include  mixins.color(null, red);
    }

    .hit {
        @include  mixins.color(null, yellow);
    }

    .cell {
        @include mixins.size($cell-size, $min: false);
    }

    .cell.game-cell {
        @include mixins.box-control(null, null, $border: (1px solid white));
        @include mixins.position(relative);
    }

    .cell.number-cell {
        @include mixins.flex(row, center, center);
        @include mixins.box-control(null, null, null);
    }

    .ship {
        @include mixins.position(absolute, "T", 0, "L", -2px);
        z-index: 100;
        
        * {
            @include mixins.size($cell-size, $cell-size, false);
        }

        &.vertical {
            @include mixins.flex(row);
            @include mixins.size(null, 100%, false);
            transform: rotate(90deg) translateY(calc(-1rem - 1.5vw));
            transform-origin: top left;
        }

        &.horizontal {
            @include mixins.flex(row);
            @include mixins.size(null, 100%, false);
        }

        &.carrier {
            @include mixins.image-as-background(url(../assets/images/carrier-cropped.svg), no-repeat, 100%, null, bottom);
        }

        &.battleship {
            @include mixins.image-as-background(url(../assets/images/carrier-cropped.svg), no-repeat, 100%, null, bottom);
        }

        &.cruiser {
            @include mixins.image-as-background(url(../assets/images/destroyer-cropped.svg), no-repeat, 100%, null, bottom);
        }

        &.submarine {
            @include mixins.image-as-background(url(../assets/images/submarine-cropped.svg), no-repeat, 100%, null, bottom);
        }

        &.destroyer {
            @include mixins.image-as-background(url(../assets/images/patrol-cropped.svg), no-repeat, 100%, null, bottom);
        }
    }

    .drag-over {
        border: dashed 3px red !important;
    }

    .drag-over-available {
        border: dashed 3px green !important;
    }
    
    .ship-error {
        animation-name: shipError;
        animation-duration: 0.1s;
        animation-iteration-count: infinite;
    }

    @keyframes shipError {
        from {
            @include mixins.color(null, red);
        }
        to {
            @include mixins.color(null, transparent);
        }
    }

}

.pass-screen {
    @include mixins.font(calc(8px + 2vw), 500, "typewriter");
    @include mixins.flex(row, center, center);
    @include mixins.size(100%, 100%);
    text-align: center;
}
